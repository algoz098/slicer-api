name: C++ CLI build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build CLI on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-2022 ]
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # --- Build OrcaSlicer (full) as per official docs ---
      - name: Linux | Build OrcaSlicer + CLI inside Docker (Ubuntu 22.04)
        if: runner.os == 'Linux'
        run: |
          docker run --rm \
            -e GITHUB_ACTIONS=true \
            -v "${{ github.workspace }}":/work \
            -w /work \
            ubuntu:22.04 bash -lc '
              set -euo pipefail
              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt-get install -y build-essential ninja-build curl git pkg-config cmake
              cd OrcaSlicer
              chmod +x build_linux.sh
              ./build_linux.sh -u
              ./build_linux.sh -dsi
              cd /work
              cmake -S OrcaSlicerCli -B build -DORCASLICER_ROOT_DIR=/work/OrcaSlicer -DORCACLI_REQUIRE_LIBS=ON
              cmake --build build --target orcaslicer-cli --config Release -- -j2
            '

      - name: macOS | Setup CMake 3.31.x
        if: runner.os == 'macOS'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.31.7'

      - name: macOS | Install tools required by docs
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install gettext libtool automake autoconf texinfo || true

      - name: macOS | Build OrcaSlicer
        if: runner.os == 'macOS'
        working-directory: OrcaSlicer
        run: |
          chmod +x build_release_macos.sh
          ./build_release_macos.sh

      - name: Windows | Setup CMake 3.31.x
        if: runner.os == 'Windows'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.31.7'

      - name: Windows | Install required tools
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install strawberryperl git-lfs -y --no-progress
          git lfs install
          git lfs pull

      - name: Windows | Build OrcaSlicer (VS2022)
        if: runner.os == 'Windows'
        shell: cmd
        working-directory: OrcaSlicer
        run: |
          build_release_vs2022.bat

      # --- Now build our CLI against the built libs ---
      - name: Configure (CMake)
        if: runner.os != 'Linux'
        run: |
          cmake -S OrcaSlicerCli -B build -DORCASLICER_ROOT_DIR="${{ github.workspace }}/OrcaSlicer" -DORCACLI_REQUIRE_LIBS=ON

      - name: Build (CMake) [macOS]
        if: runner.os == 'macOS'
        run: |
          cmake --build build --target orcaslicer-cli --config Release -- -j2

      - name: Build (CMake, Windows)
        if: runner.os == 'Windows'
        run: |
          cmake --build build --target orcaslicer-cli --config Release

      - name: Show outputs
        run: |
          echo "Tree under build:" && (ls -R build | sed -n '1,200p' || true)

      - name: Upload artifact (CLI)
        uses: actions/upload-artifact@v4
        with:
          name: orcaslicer-cli-${{ runner.os }}
          path: |
            build/bin/**/orcaslicer-cli*
            build/bin/orcaslicer-cli*
          if-no-files-found: warn

