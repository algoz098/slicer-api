name: Node addon prebuilds

on:
  workflow_dispatch:
  push:
    branches: [ node-api ]
  pull_request:
    branches: [ node-api ]

jobs:
  prebuild:
    name: Prebuild ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-2022 ]
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # --- Build OrcaSlicer (full) as per official docs ---
      - name: Linux | Build OrcaSlicer (deps + slic3r)
        if: runner.os == 'Linux'
        working-directory: OrcaSlicer
        run: |
          sudo apt-get update
          # Script handles deps install, but ensure base tools
          sudo apt-get install -y build-essential ninja-build curl git pkg-config
          chmod +x build_linux.sh
          ./build_linux.sh -u
          ./build_linux.sh -dsi

      - name: macOS | Setup CMake 3.31.x
        if: runner.os == 'macOS'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.31.7'

      - name: macOS | Install tools required by docs
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install gettext libtool automake autoconf texinfo || true

      - name: macOS | Build OrcaSlicer
        if: runner.os == 'macOS'
        working-directory: OrcaSlicer
        run: |
          chmod +x build_release_macos.sh
          ./build_release_macos.sh

      - name: Windows | Setup CMake 3.31.x
        if: runner.os == 'Windows'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.31.7'

      - name: Windows | Install required tools
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install strawberryperl git-lfs -y --no-progress
          git lfs install
          git lfs pull

      - name: Windows | Build OrcaSlicer (VS2022)
        if: runner.os == 'Windows'
        shell: cmd
        working-directory: OrcaSlicer
        run: |
          build_release_vs2022.bat

      # --- Build Node addon prebuild ---
      - name: Install npm deps (bindings)
        working-directory: OrcaSlicerCli/bindings/node
        run: npm ci

      - name: Build and stage prebuild
        working-directory: OrcaSlicerCli/bindings/node
        run: npm run prebuild:all

      - name: List staged prebuilds
        working-directory: OrcaSlicerCli/bindings/node
        run: |
          echo "Platform: ${{ runner.os }}"
          ls -R prebuilds || true

      - name: Upload artifact (prebuild)
        uses: actions/upload-artifact@v4
        with:
          name: prebuild-${{ runner.os }}
          path: |
            OrcaSlicerCli/bindings/node/prebuilds/**
          if-no-files-found: error

