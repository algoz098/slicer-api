name: CI (macOS)

on:
  push:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: macos-latest
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          check-latest: true
          cache: npm
          cache-dependency-path: |
            OrcaSlicerCli/bindings/node/package-lock.json
            node-api/package-lock.json

      - name: Ensure Ninja is available
        run: |
          if ! command -v ninja >/dev/null 2>&1; then
            brew update
            brew install ninja
          fi

      - name: Configure CLI build (Ninja)
        run: |
          cmake -S OrcaSlicerCli -B OrcaSlicerCli/build-ninja -G Ninja \
            -DORCASLICER_ROOT_DIR=OrcaSlicer \
            -DORCACLI_BUILD_CLI=ON \
            -DORCACLI_BUILD_NODE_ADDON=OFF

      - name: Build CLI
        run: cmake --build OrcaSlicerCli/build-ninja --target orcaslicer-cli -j3

      - name: Install addon dev deps
        working-directory: OrcaSlicerCli/bindings/node
        run: npm ci

      - name: Build Node addon (N-API)
        working-directory: OrcaSlicerCli/bindings/node
        run: npm run build

      - name: Test Node addon
        working-directory: OrcaSlicerCli/bindings/node
        env:
          # Keep logs quieter in CI
          ORCACLI_LOG_LEVEL: "1"
          ORCACLI_QUIET: "1"
        run: npm test

      - name: Install node-api deps
        working-directory: node-api
        run: npm ci

      - name: Test node-api (HTTP + CLI)
        working-directory: node-api
        env:
          ORCACLI_LOG_LEVEL: "1"
          ORCACLI_QUIET: "1"
        run: npm test


  build-docker:
    name: Build addon base and slicer-api images
    runs-on: ubuntu-latest
    timeout-minutes: 180
    needs: build-and-test
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (optional; enables pulling/pushing if needed)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive Orca version/arch
        id: meta
        run: |
          bash scripts/ci/derive_meta.sh
        shell: bash

      - name: Compute image tags from source (owner/version/arch)
        id: tags
        run: |
          lower_owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "DEPS_TAG=ghcr.io/${lower_owner}/orcaslicer-build-deps:${{ steps.meta.outputs.version }}-${{ steps.meta.outputs.arch }}" >> "$GITHUB_ENV"
          echo "CORE_TAG=ghcr.io/${lower_owner}/orcaslicer-core:${{ steps.meta.outputs.version }}-${{ steps.meta.outputs.arch }}" >> "$GITHUB_ENV"
        shell: bash

      - name: Build DEPS image (target=deps)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: deps
          build-args: |
            ENFORCE_PREBUILT_BASE=false
          load: true
          tags: |
            ${{ env.DEPS_TAG }}

      - name: Build CORE image (target=core, reusing deps)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: core
          build-args: |
            ENFORCE_PREBUILT_BASE=false
            BASE_DEPS_IMAGE=${{ env.DEPS_TAG }}
            USE_PREBUILT_DEPS=true
          load: true
          tags: |
            ${{ env.CORE_TAG }}

      - name: Build ADDON base image (target=base)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: base
          build-args: |
            ENFORCE_PREBUILT_BASE=true
            USE_PREBUILT_DEPS=true
            BASE_DEPS_IMAGE=${{ env.DEPS_TAG }}
            BASE_CORE_IMAGE=${{ env.CORE_TAG }}
          load: true
          tags: |
            orca-addon:ci

      - name: Build slicer-api image (consumes addon base)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: node-api/Dockerfile
          build-args: |
            ADDON_BASE=orca-addon:ci
          load: true
          tags: |
            slicer-api:ci

      - name: Show local images
        run: |
          docker images | head -n 30
